server:
  port: 9000
spring:
#  security:
#    oauth2:
#      authorizationserver:
#        client:
#          spring:
#            registration:
#              client-id: crm
#              client-secret: "{bcrypt}$2a$10$nP.SPpyXaVEiBsLCTJr5JuFUML75aiZVp2XKwdONdcVWoYS2JPFIm"
#              client-authentication-methods: client_secret_basic
#              authorization-grant-types:
#              - client_credentials
#              - authorization_code
#              - refresh_token
#              redirect-uris:
#                - http://127.0.0.1:8080/login/oauth2/code/spring
#              scopes:
#                - user.read
#                - user.write
#                - openid
#            require-authorization-consent: true
#            require-proof-key: false
#            token:
#              access-token-time-to-live: 30s
  datasource:
    url: jdbc:postgresql://localhost:5434/scaler
    username: postgres
    password: postgres
  sql:
    init:
      mode: always
logging:
  level:
    org.springframework.security: TRACE
    org.springframework.boot: DEBUG
jwt:
  key:
    public: classpath:app.pub
    private: classpath:app.key # todo - move to environment variable
    id: oauth2-key